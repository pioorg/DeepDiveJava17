/*
 *  Copyright (C) 2021 Piotr Przyby≈Ç
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

package org.przybyl.ddj17.randomGenerators;


import java.security.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.random.*;

public class RandomGenerators {

    public static void main(String[] args) {
        int anInteger = new Random().nextInt(12);
        RandomGenerator ranGen = switch (anInteger % 4) {
            case 1 -> ThreadLocalRandom.current();
            case 2 -> new SecureRandom();
            case 3 -> new SplittableRandom();
            default -> new Random();
        };
        System.out.println(ranGen.nextInt());

        ServiceLoader.load(RandomGenerator.class).stream().forEach((var provider) -> {
            var generator = provider.get();
            var type = provider.type();
            System.out.println("Random number generated by " + type.getCanonicalName() + " is " + generator.nextInt());

        });
    }
}
